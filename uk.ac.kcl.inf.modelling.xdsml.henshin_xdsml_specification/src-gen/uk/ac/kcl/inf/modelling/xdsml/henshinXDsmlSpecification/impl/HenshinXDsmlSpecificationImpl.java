/**
 * generated by Xtext 2.12.0
 */
package uk.ac.kcl.inf.modelling.xdsml.henshinXDsmlSpecification.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectResolvingEList;

import org.eclipse.emf.henshin.model.Unit;

import uk.ac.kcl.inf.modelling.xdsml.henshinXDsmlSpecification.HenshinXDsmlSpecification;
import uk.ac.kcl.inf.modelling.xdsml.henshinXDsmlSpecification.HenshinXDsmlSpecificationPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Henshin XDsml Specification</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link uk.ac.kcl.inf.modelling.xdsml.henshinXDsmlSpecification.impl.HenshinXDsmlSpecificationImpl#getMetamodel <em>Metamodel</em>}</li>
 *   <li>{@link uk.ac.kcl.inf.modelling.xdsml.henshinXDsmlSpecification.impl.HenshinXDsmlSpecificationImpl#getUnits <em>Units</em>}</li>
 * </ul>
 *
 * @generated
 */
public class HenshinXDsmlSpecificationImpl extends MinimalEObjectImpl.Container implements HenshinXDsmlSpecification
{
  /**
   * The cached value of the '{@link #getMetamodel() <em>Metamodel</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMetamodel()
   * @generated
   * @ordered
   */
  protected EPackage metamodel;

  /**
   * The cached value of the '{@link #getUnits() <em>Units</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUnits()
   * @generated
   * @ordered
   */
  protected EList<Unit> units;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected HenshinXDsmlSpecificationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return HenshinXDsmlSpecificationPackage.Literals.HENSHIN_XDSML_SPECIFICATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EPackage getMetamodel()
  {
    if (metamodel != null && metamodel.eIsProxy())
    {
      InternalEObject oldMetamodel = (InternalEObject)metamodel;
      metamodel = (EPackage)eResolveProxy(oldMetamodel);
      if (metamodel != oldMetamodel)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, HenshinXDsmlSpecificationPackage.HENSHIN_XDSML_SPECIFICATION__METAMODEL, oldMetamodel, metamodel));
      }
    }
    return metamodel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EPackage basicGetMetamodel()
  {
    return metamodel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMetamodel(EPackage newMetamodel)
  {
    EPackage oldMetamodel = metamodel;
    metamodel = newMetamodel;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, HenshinXDsmlSpecificationPackage.HENSHIN_XDSML_SPECIFICATION__METAMODEL, oldMetamodel, metamodel));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Unit> getUnits()
  {
    if (units == null)
    {
      units = new EObjectResolvingEList<Unit>(Unit.class, this, HenshinXDsmlSpecificationPackage.HENSHIN_XDSML_SPECIFICATION__UNITS);
    }
    return units;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case HenshinXDsmlSpecificationPackage.HENSHIN_XDSML_SPECIFICATION__METAMODEL:
        if (resolve) return getMetamodel();
        return basicGetMetamodel();
      case HenshinXDsmlSpecificationPackage.HENSHIN_XDSML_SPECIFICATION__UNITS:
        return getUnits();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case HenshinXDsmlSpecificationPackage.HENSHIN_XDSML_SPECIFICATION__METAMODEL:
        setMetamodel((EPackage)newValue);
        return;
      case HenshinXDsmlSpecificationPackage.HENSHIN_XDSML_SPECIFICATION__UNITS:
        getUnits().clear();
        getUnits().addAll((Collection<? extends Unit>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case HenshinXDsmlSpecificationPackage.HENSHIN_XDSML_SPECIFICATION__METAMODEL:
        setMetamodel((EPackage)null);
        return;
      case HenshinXDsmlSpecificationPackage.HENSHIN_XDSML_SPECIFICATION__UNITS:
        getUnits().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case HenshinXDsmlSpecificationPackage.HENSHIN_XDSML_SPECIFICATION__METAMODEL:
        return metamodel != null;
      case HenshinXDsmlSpecificationPackage.HENSHIN_XDSML_SPECIFICATION__UNITS:
        return units != null && !units.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //HenshinXDsmlSpecificationImpl
